plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}

android {

    namespace 'top.clarkding.widget.common'
    compileSdk rootProject.ext.compile_version

    defaultConfig {

        minSdk rootProject.ext.min_version
        targetSdk rootProject.ext.target_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation "androidx.core:core-ktx:$kot_core"
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "com.google.android.material:material:$material"
}

ext['PROJ_BASENAME'] = "ClarkWidgetCommon"
ext['PROJ_VERSION'] = "1.0.1"

afterEvaluate {

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    publishing {
        repositories {
            maven {
                name "local"
                url = "$buildDir/repo"
            }
            maven {
                name "sonartype-Staging"
                url = properties.getProperty('sonartypeStaging')
                credentials {
                    username = properties.getProperty('ossrhUsername')
                    password = properties.getProperty('ossrhPassword')
                }
            }
            maven {
                name "sonatype-Snapshots"
                url = properties.getProperty('sonatypeSnapshots')
                credentials {
                    username = properties.getProperty('ossrhUsername')
                    password = properties.getProperty('ossrhPassword')
                }
            }
        }
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release

                groupId = properties.getProperty('PROJ_GROUP')
                artifactId = PROJ_BASENAME
                version = PROJ_VERSION

                pom {
                    name = PROJ_BASENAME
                    description = properties.getProperty('PROJ_DESCRIPTION')
                    url = properties.getProperty('PROJ_VCSURL')
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = properties.getProperty('DEVELOPER_ID')
                            name = properties.getProperty('DEVELOPER_NAME')
                            email = properties.getProperty('DEVELOPER_EMAIL')
                        }
                    }
                    scm {
                        connection = properties.getProperty('PROJ_WEBSITEURL')
                        developerConnection = properties.getProperty('PROJ_VCSURL')
                        url = properties.getProperty('PROJ_URL')
                    }
                }
            }
            debug(MavenPublication) {
                from components.debug

                groupId = properties.getProperty('PROJ_GROUP')
                artifactId = PROJ_BASENAME
                version = String.format("%s-SNAPSHOT", PROJ_VERSION)

                pom {
                    name = PROJ_BASENAME
                    description = properties.getProperty('PROJ_DESCRIPTION')
                    url = properties.getProperty('PROJ_WEBSITEURL')

                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = properties.getProperty('DEVELOPER_ID')
                            name = properties.getProperty('DEVELOPER_NAME')
                            email = properties.getProperty('DEVELOPER_EMAIL')
                        }
                    }
                    scm {
                        connection = properties.getProperty('PROJ_WEBSITEURL')
                        developerConnection = properties.getProperty('PROJ_VCSURL')
                        url = properties.getProperty('PROJ_URL')
                    }
                }
            }
        }

        signing {
            sign publishing.publications.release, publishing.publications.debug
        }
    }
}